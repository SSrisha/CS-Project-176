import pandas as pd
import matplotlib.pyplot as plt
import csv

### cleaning
def load_data(filepath):
    if filepath.endswith(".csv"):
        return pd.read_csv(filepath)
    elif filepath.endswith(".xlsx"):
        return pd.read_excel(filepath)
    else:
        print("Error: Unsupported file format")
        return None

dummy_data_fp = "/mnt/data/dummy_data.xlsx"
marketing_sales_fp = "/mnt/data/marketing_sales_datas.xlsx"
test_fp = "/mnt/data/test_social_media.csv"
train_fp = "/mnt/data/train_social_media.xlsx"
val_fp = "/mnt/data/val_social_media - Copy (1).xlsx"

dummy_data = load_data(dummy_data_fp)
marketing_sales = load_data(marketing_sales_fp)
test = load_data(test_fp)
train = load_data(train_fp)
val = load_data(val_fp)

def clean_data(df):
    df = df.drop_duplicates()
    df = df.fillna(method = 'ffill').fillna(method = "bfill")
    return df

dummy_data = clean_data(dummy_data)
marketing_sales = clean_data(marketing_sales)
test = clean_data(test)
train = clean_data(train)
val = clean_data(val)

##filtering
def filter_data(df, column, condition):
    return df[df[column] == condition]

filtered_test = filter_data(test, "platform", "Instagram")

### sorting 
def sort_data(df, column, ascending = True):
    return df.sort_values(by=column, ascending=ascending)

sorted_marketing = sort_data(marketing_sales, "Sales", ascending = False)

### merging
def merge_data(df1,df2, on_column, how="inner"):
    return pd.merge(df1, df2, on=on_column, how=how)

merged_data = merge_data(dummy_data, test, on_column="User_ID", how="inner")

###pivoting
def pivot_data(df, index_col, value_col, aggfunc = "mean"):
    return df.pivot_table(index=index_col, values=value_col, aggfunc=aggfunc)

pivoted_sales = pivot_data(marketing_sales, "platform", "Sales")

### stacking
def stack_data(df):
    return df.set_index("User_ID").stack().reset_index()

stacked_test = stack_data(test)

### visualizations
def visualize_data(data):
    #Scatter plot
    plt.figure(figsize=(8,6))
    plt.scatter(data["time_spent"], data["engagement_score"], alpha=0.5)
    plt.title("Time Spent vs Engagement Score")
    plt.xlabel("Time Spent")
    plt.ylabel("Engagement Score")
    plt.grid()
    plt.show()

    # Box plot
    avg_time = data.groupby("platform")["time_spent"].mean().reset_index()
    plt.figure(figsize=(8,6))
    plt.bar(avg_time["platform"], avg_time["time_spent"], color="skyblue")
    plt.title("Average Time Spent on Social Media")
    plt.xlabel("Platform")
    plt.ylabel("Time Spent")
    plt.show()

    #Histogram
    plt.figure(figsize=(8,6))
    plt.hist(data["time_spent"], bins=20, edgecolor="black", alpha=0.7)
    plt.title("Distribution of Time Spent")
    plt.xlabel("Time Spent")
    plt.ylabel("Frequency")
    plt.show()

    # Line Chart
    platform_trend = data.groupby("date")["time_spent"].mean().reset_index()
    plt.figure(figsize=(8,6))
    plt.plot(platform_trend["date"], platform_trend["time_spent"], marker="o")
    plt.title("Time Spent Over Time")
    plt.xlabel("Date")
    plt.ylabel("Average Time Spent")
    plt.grid()   
    plt.show()

    #Boxplot
    plt.figure(figsize=(8,6))
    data.boxplot(column = "time_spent", by="platform", grid=False, vert=False)
    plt.title("Time Spent Distribution by Platform")
    plt.xlabel("Time Spent")
    plt.show()

#run visualizations
visualize_data(test)

if __name__ == "__main__":
    print("Cleaned Marketing Sales Data:")
    print(marketing_sales.head())

    print("\nFiltered Test Data (Instagram):")
    print(filtered_test.head())

    print("\nSorted Marketing Data (by Sales):")
    print(sorted_marketing.head())

    print("\nMerged Data:")
    print(merged_data.head())

    print("\nPivoted Marketing Data:")
    print(pivoted_sales.head())

    print("\nStacked Test Data:")
    print(stacked_test.head())
    
